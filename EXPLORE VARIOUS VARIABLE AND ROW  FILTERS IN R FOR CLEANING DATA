# -----------------------------------------
# 1. Import Libraries and Create DataFrame
# -----------------------------------------

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Generate sample data
data = {
    'ID': range(1, 11),
    'Age': np.random.randint(18, 65, size=10),
    'Income': np.random.randint(30000, 90000, size=10),
    'Gender': ['Male', 'Female', 'Male', 'Female', 'Male',
               'Female', 'Male', 'Female', 'Male', 'Male'],
    'Education': ['High School', 'Bachelor', 'Master', 'PhD', 'Bachelor',
                  'Master', 'Bachelor', 'PhD', 'High School', 'Master']
}

# Create DataFrame
df = pd.DataFrame(data)

# -----------------------------------------
# 2. Display Initial Information
# -----------------------------------------

print("ðŸ”¹ First 5 Rows:")
print(df.head())

print("\nðŸ”¹ Descriptive Statistics:")
print(df.describe())

print("\nðŸ”¹ Null Value Count:")
print(df.isnull().sum())

print("\nðŸ”¹ Unique Genders:", df['Gender'].unique())
print("ðŸ”¹ Unique Education Levels:", df['Education'].unique())

# -----------------------------------------
# 3. Data Selection & Filtering
# -----------------------------------------

# Select only Age and Income columns
selected_columns = df[['Age', 'Income']]
print("\nðŸ”¹ Selected Columns (Age & Income):")
print(selected_columns.head())

# Filter: People older than 30
filtered_data = df[df['Age'] > 30]
print("\nðŸ”¹ People with Age > 30:")
print(filtered_data.head())

# Filter: Males with a Master's degree
filtered_rows = df[(df['Gender'] == 'Male') & (df['Education'] == 'Master')]
print("\nðŸ”¹ Male with Master's Degree:")
print(filtered_rows.head())

# -----------------------------------------
# 4. Visualization
# -----------------------------------------

# Histogram of Age
plt.figure(figsize=(6, 4))
plt.hist(df['Age'], bins=5, edgecolor='black')
plt.title('Age Distribution')
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.grid(True)
plt.tight_layout()
plt.show()

# Boxplot of Income
plt.figure(figsize=(6, 4))
plt.boxplot(df['Income'])
plt.title('Income Distribution')
plt.ylabel('Income')
plt.grid(True)
plt.tight_layout()
plt.show()

# Bar plot: Gender Distribution
plt.figure(figsize=(6, 4))
gender_counts = df['Gender'].value_counts()
gender_counts.plot(kind='bar', color='skyblue')
plt.title('Gender Distribution')
plt.xlabel('Gender')
plt.ylabel('Count')
plt.grid(axis='y')
plt.tight_layout()
plt.show()

# Pie chart: Education Distribution
plt.figure(figsize=(6, 6))
education_counts = df['Education'].value_counts()
education_counts.plot(
    kind='pie',
    autopct='%1.1f%%',
    colors=['gold', 'lightcoral', 'lightgreen', 'lightskyblue']
)
plt.title('Education Distribution')
plt.ylabel('')
plt.tight_layout()
plt.show()
